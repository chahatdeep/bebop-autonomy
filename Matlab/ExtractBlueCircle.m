function [BW,maskedRGBImage, centerBest, RadiusBest, MetricBest] = ExtractBlueCircle(Img)
%createMask  Threshold RGB image using auto-generated code from colorThresholder app.
%  [BW,MASKEDRGBIMAGE] = createMask(RGB) thresholds image RGB using
%  auto-generated code from the colorThresholder app. The colorspace and
%  range for each channel of the colorspace were set within the app. The
%  segmentation mask is returned in BW, and a composite of the mask and
%  original RGB images is returned in maskedRGBImage.

% Auto-generated by colorThresholder app on 19-Jan-2018
%------------------------------------------------------


% Convert RGB image to chosen color space
I = rgb2hsv(Img);

% Define thresholds for channel 1 based on histogram settings
channel1Min = 0.437;
channel1Max = 0.891;

% Define thresholds for channel 2 based on histogram settings
channel2Min = 0.462;
channel2Max = 0.965;

% Define thresholds for channel 3 based on histogram settings
channel3Min = 0.035;
channel3Max = 1.000;

% Create mask based on chosen histogram thresholds
sliderBW = (I(:,:,1) >= channel1Min ) & (I(:,:,1) <= channel1Max) & ...
    (I(:,:,2) >= channel2Min ) & (I(:,:,2) <= channel2Max) & ...
    (I(:,:,3) >= channel3Min ) & (I(:,:,3) <= channel3Max);
BW = sliderBW;

% Initialize output masked image based on input image.
maskedRGBImage = Img;

% Set background pixels where BW is false to zero.
maskedRGBImage(repmat(~BW,[1 1 3])) = 0;

[centers1, radii1, metric1] = imfindcircles(BW,[10 24]);
[centers2, radii2, metric2] = imfindcircles(BW,[24 38]);
if(~isempty(centers2))
    centerBest = centers2(1,:);
    RadiusBest = radii2(1);
    MetricBest = metric2(1);
elseif(~isempty(centers1))
    centerBest = centers1(1,:);
    RadiusBest = radii1(1);
    MetricBest = metric1(1);
else
    centerBest = [];
    RadiusBest = [];
    MetricBest = [];
end

end
